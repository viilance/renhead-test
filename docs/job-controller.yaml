openapi: "3.0.3"
info:
  title: "Job API"
  version: "1.0.0"
servers:
  - url: http://localhost/api
paths:
  /jobs:
    get:
      summary: List all jobs
      description: Returns a list of all jobs.
      responses:
        200:
          description: A list of jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
    post:
      summary: Create a new job
      description: Creates a new job and returns the created job.
      requestBody:
        description: The job to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      responses:
        200:
          description: The created job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        400:
          description: The job creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /jobs/{id}:
    get:
      summary: Get a job by ID
      description: Returns a single job identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the job to retrieve
          schema:
            type: string
      responses:
        200:
          description: The requested job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        404:
          $ref: '#/components/responses/NotFoundResponse'
    patch:
      summary: Update a job
      description: Updates an existing job and returns the updated job.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the job to update
          schema:
            type: string
      requestBody:
        description: The job to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobRequest'
      responses:
        200:
          description: The updated job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        400:
          description: The job update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          $ref: '#/components/responses/NotFoundResponse'
    delete:
      summary: Delete a job
      description: Deletes a job identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the job to delete
          schema:
            type: string
      responses:
        204:
          description: The job was deleted successfully
        404:
          $ref: '#/components/responses/NotFoundResponse'
components:
  schemas:
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int64
        employee_type:
          type: string
        employee_id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        total_hours:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          nullable: true
      required:
        - employee_type
        - employee_id
        - date
        - total_hours
    CreateJobRequest:
      type: object
      properties:
        employee_type:
          type: string
        employee_id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        total_hours:
          type: number
      required:
        - employee_type
        - employee_id
        - date
        - total_hours
    UpdateJobRequest:
      type: object
      properties:
        employee_type:
          type: string
        employee_id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        total_hours:
          type: number
      anyOf:
        - required:
            - employee_type
        - required:
            - employee_id
        - required:
            - date
        - required:
            - total_hours
  responses:
    NotFoundResponse:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
